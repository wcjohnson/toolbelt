// Create an event handler prop that, when called, directs react-router to
// change locations. Must follow the `withRouter` HOC in the `compose()` chain.

import compose from 'recompose/compose'
import withPropsOnChange from 'recompose/withPropsOnChange'

createLocationDescriptor(to, query, hash, state) ->
  if (query || hash || state):
    { pathname: to, query, hash, state }
  else:
    to

export default withRouterLink(eventType = 'onClick', action = 'push') ->
  compose(
    withPropsOnChange(
      ["to", "query", "hash", "state", "children", "target", "router", "onlyActiveOnIndex", eventType],
      (props) ->
        { to, query, hash, state, children, target, router, onlyActiveOnIndex } = props
        
        actionHandler(event) ->
          // Delegate to child event handlers
          if children?.props[eventType]: children.props[eventType](event)
          if props[eventType]: props[eventType](event)
          if (not to): return
          if (target or event.defaultPrevented): return
          event.preventDefault()
          router[action]( createLocationDescriptor(to, query, hash, state) )

        mergedProps = {}
        mergedProps[eventType] = actionHandler
        if to:
          mergedProps.href = router.createHref(to)
          if props.active == undefined:
            mergedProps.active = router.isActive(to, onlyActiveOnIndex)

        mergedProps
    )
  )
