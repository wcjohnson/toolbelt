import Layer from './Layer'
import cloneDeep from 'lodash/cloneDeep'

// Create a new HTML Canvas and render a "simple" layer to it. A simple
// layer stack consists of a root layer with one child Image layer.
export default renderSimpleLayerToCanvas(rootLayer, targetWidth, targetHeight) ->
  imageLayer = rootLayer.children[0]
  image = imageLayer.getImage()

  // Generate output canvas
  outCanvas = document.createElement('canvas')

  // Get actual size of image after rotation etc
  [ dx, dy ] = imageLayer.getTransformedBoxDimensions()
  outAspect = dx/dy

  // If no target dimensions were provided, use dimensions of whole image
  if (not targetWidth) or (not targetHeight):
    if outAspect > 1:
      now targetWidth = Math.max(image.width, image.height)
      now targetHeight = Math.min(image.width, image.height)
    else:
      now targetWidth = Math.min(image.width, image.height)
      now targetHeight = Math.max(image.width, image.height)

  // Best-fit to desired output box
  [ width, height ] = Layer.fitAspect(targetWidth, targetHeight, outAspect)
  outCanvas.width = width
  outCanvas.height = height

  // Make new layer structure and retransform
  newRootLayer = cloneDeep(rootLayer)
  newRootLayer.setAspect(width, height)
  newRootLayer.children[0].fit()

  // Render to final canvas
  context = outCanvas.getContext('2d')
  context.setTransform(1, 0, 0, 1, 0, 0)
  context.clearRect(0, 0, width, height)
  newRootLayer.doPaint(outCanvas, context)

  outCanvas
